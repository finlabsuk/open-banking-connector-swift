//
// ProductDetails.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct ProductDetails: Codable {

    public enum Segment: String, Codable { 
        case clientAccount = "ClientAccount"
        case standard = "Standard"
        case nonCommercialChaitiesClbSoc = "NonCommercialChaitiesClbSoc"
        case nonCommercialPublicAuthGovt = "NonCommercialPublicAuthGovt"
        case religious = "Religious"
        case sectorSpecific = "SectorSpecific"
        case startup = "Startup"
        case switcher = "Switcher"
    }
    public enum FeeFreeLengthPeriod: String, Codable { 
        case day = "Day"
        case halfYear = "Half Year"
        case month = "Month"
        case quarter = "Quarter"
        case week = "Week"
        case year = "Year"
    }
    /** Market segmentation is a marketing term referring to the aggregating of prospective buyers into groups, or segments, that have common needs and respond similarly to a marketing action. Market segmentation enables companies to target different categories of consumers who perceive the full value of certain products and services differently from one another.  Read more: Market Segmentation http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd  With respect to BCA products, they are segmented in relation to different markets that they wish to focus on.  */
    public var segment: [Segment]?
    /** The length/duration of the fee free period */
    public var feeFreeLength: Float?
    /** The unit of period (days, weeks, months etc.) of the promotional length */
    public var feeFreeLengthPeriod: FeeFreeLengthPeriod?
    /** Optional additional notes to supplement the Core product details */
    public var notes: [String]?

    public init(segment: [Segment]?, feeFreeLength: Float?, feeFreeLengthPeriod: FeeFreeLengthPeriod?, notes: [String]?) {
        self.segment = segment
        self.feeFreeLength = feeFreeLength
        self.feeFreeLengthPeriod = feeFreeLengthPeriod
        self.notes = notes
    }

    public enum CodingKeys: String, CodingKey { 
        case segment = "Segment"
        case feeFreeLength = "FeeFreeLength"
        case feeFreeLengthPeriod = "FeeFreeLengthPeriod"
        case notes = "Notes"
    }


}

