//
// OBParty2.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct OBParty2: Codable {

    /** A unique and immutable identifier used to identify the customer resource. This identifier has no meaning to the account owner. */
    public var partyId: String
    /** Number assigned by an agent to identify its customer. */
    public var partyNumber: String?
    public var partyType: OBExternalPartyType1Code?
    /** Name by which a party is known and which is usually used to identify that party. */
    public var name: String?
    /** The full legal name of the party. */
    public var fullLegalName: String?
    public var legalStructure: OBExternalLegalStructureType1Code?
    /** A flag to indicate a partyâ€™s beneficial ownership of the related account. */
    public var beneficialOwnership: Bool?
    public var accountRole: OBExternalAccountRole1Code?
    /** Address for electronic mail (e-mail). */
    public var emailAddress: String?
    /** Collection of information that identifies a phone number, as defined by telecom services. */
    public var phone: String?
    /** Collection of information that identifies a mobile phone number, as defined by telecom services. */
    public var mobile: String?
    public var relationships: OBPartyRelationships1?
    /** Postal address of a party. */
    public var address: [OBPostalAddress8]?

    public init(partyId: String, partyNumber: String?, partyType: OBExternalPartyType1Code?, name: String?, fullLegalName: String?, legalStructure: OBExternalLegalStructureType1Code?, beneficialOwnership: Bool?, accountRole: OBExternalAccountRole1Code?, emailAddress: String?, phone: String?, mobile: String?, relationships: OBPartyRelationships1?, address: [OBPostalAddress8]?) {
        self.partyId = partyId
        self.partyNumber = partyNumber
        self.partyType = partyType
        self.name = name
        self.fullLegalName = fullLegalName
        self.legalStructure = legalStructure
        self.beneficialOwnership = beneficialOwnership
        self.accountRole = accountRole
        self.emailAddress = emailAddress
        self.phone = phone
        self.mobile = mobile
        self.relationships = relationships
        self.address = address
    }

    public enum CodingKeys: String, CodingKey { 
        case partyId = "PartyId"
        case partyNumber = "PartyNumber"
        case partyType = "PartyType"
        case name = "Name"
        case fullLegalName = "FullLegalName"
        case legalStructure = "LegalStructure"
        case beneficialOwnership = "BeneficialOwnership"
        case accountRole = "AccountRole"
        case emailAddress = "EmailAddress"
        case phone = "Phone"
        case mobile = "Mobile"
        case relationships = "Relationships"
        case address = "Address"
    }


}

