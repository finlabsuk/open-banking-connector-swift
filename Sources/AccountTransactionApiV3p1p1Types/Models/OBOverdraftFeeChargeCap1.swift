//
// OBOverdraftFeeChargeCap1.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Details about any caps (maximum charges) that apply to a particular fee/charge. Capping can either be based on an amount (in gbp), an amount (in items) or a rate. */

public struct OBOverdraftFeeChargeCap1: Codable {

    /** Fee/charge type which is being capped */
    public var feeType: [OBOverdraftFeeType1Code]
    public var minMaxType: OBMinMaxType1Code
    /** Indicates whether the advertised overdraft rate is guaranteed to be offered to a borrower by the bank e.g. if it�s part of a government scheme, or whether the rate may vary dependent on the applicant�s circumstances. */
    public var feeCapOccurrence: Int?
    /** Indicates whether the advertised overdraft rate is guaranteed to be offered to a borrower by the bank e.g. if it�s part of a government scheme, or whether the rate may vary dependent on the applicant�s circumstances. */
    public var feeCapAmount: Int?
    public var cappingPeriod: OBPeriod1Code?
    /** Notes related to Overdraft fee charge cap */
    public var notes: [String]?
    /** Other fee type code which is not available in the standard code set */
    public var otherFeeType: [OBOtherCodeType1]?

    public init(feeType: [OBOverdraftFeeType1Code], minMaxType: OBMinMaxType1Code, feeCapOccurrence: Int?, feeCapAmount: Int?, cappingPeriod: OBPeriod1Code?, notes: [String]?, otherFeeType: [OBOtherCodeType1]?) {
        self.feeType = feeType
        self.minMaxType = minMaxType
        self.feeCapOccurrence = feeCapOccurrence
        self.feeCapAmount = feeCapAmount
        self.cappingPeriod = cappingPeriod
        self.notes = notes
        self.otherFeeType = otherFeeType
    }

    public enum CodingKeys: String, CodingKey { 
        case feeType = "FeeType"
        case minMaxType = "MinMaxType"
        case feeCapOccurrence = "FeeCapOccurrence"
        case feeCapAmount = "FeeCapAmount"
        case cappingPeriod = "CappingPeriod"
        case notes = "Notes"
        case otherFeeType = "OtherFeeType"
    }


}

