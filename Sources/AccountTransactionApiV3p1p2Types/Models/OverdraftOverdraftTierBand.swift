//
// OverdraftOverdraftTierBand.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Provides overdraft details for a specific tier or band */

public struct OverdraftOverdraftTierBand: Codable {

    public enum AgreementPeriod: String, Codable { 
        case day = "Day"
        case halfYear = "Half Year"
        case month = "Month"
        case quarter = "Quarter"
        case week = "Week"
        case year = "Year"
    }
    public enum OverdraftInterestChargingCoverage: String, Codable { 
        case banded = "Banded"
        case tiered = "Tiered"
        case whole = "Whole"
    }
    /** Unique and unambiguous identification of a  Tier Band for a overdraft. */
    public var identification: String?
    /** Minimum value of Overdraft Tier/Band */
    public var tierValueMin: String
    /** Maximum value of Overdraft Tier/Band */
    public var tierValueMax: String?
    /** EAR means Effective Annual Rate and/or Equivalent Annual Rate (frequently used interchangeably), being the actual annual interest rate of an Overdraft. */
    public var EAR: String?
    /** Specifies the minimum length of a band for a fixed overdraft agreement */
    public var agreementLengthMin: Float?
    /** Specifies the maximum length of a band for a fixed overdraft agreement */
    public var agreementLengthMax: Float?
    /** Specifies the period of a fixed length overdraft agreement */
    public var agreementPeriod: AgreementPeriod?
    /** Refers to which interest rate is applied when interests are tiered. For example, if an overdraft balance is £2k and the interest tiers are:- 0-£500 0.1%, 500-1000 0.2%, 1000-10000 0.5%, then the applicable interest rate could either be 0.5% of the entire balance (since the account balance sits in the top interest tier) or (0.1%*500)+(0.2%*500)+(0.5%*1000). In the 1st situation, we say the interest is applied to the ‘Whole’ of the account balance,  and in the 2nd that it is ‘Tiered’. */
    public var overdraftInterestChargingCoverage: OverdraftInterestChargingCoverage?
    /** Indicates whether the advertised overdraft rate is guaranteed to be offered to a borrower by the bank e.g. if it’s part of a government scheme, or whether the rate may vary dependent on the applicant’s circumstances. */
    public var bankGuaranteedIndicator: Bool?
    /** Optional additional notes to supplement the Tier/band details */
    public var notes: [String]?
    /** Overdraft fees and charges */
    public var overdraftFeesCharges: [OverdraftOverdraftFeesCharges]?

    public init(identification: String?, tierValueMin: String, tierValueMax: String?, EAR: String?, agreementLengthMin: Float?, agreementLengthMax: Float?, agreementPeriod: AgreementPeriod?, overdraftInterestChargingCoverage: OverdraftInterestChargingCoverage?, bankGuaranteedIndicator: Bool?, notes: [String]?, overdraftFeesCharges: [OverdraftOverdraftFeesCharges]?) {
        self.identification = identification
        self.tierValueMin = tierValueMin
        self.tierValueMax = tierValueMax
        self.EAR = EAR
        self.agreementLengthMin = agreementLengthMin
        self.agreementLengthMax = agreementLengthMax
        self.agreementPeriod = agreementPeriod
        self.overdraftInterestChargingCoverage = overdraftInterestChargingCoverage
        self.bankGuaranteedIndicator = bankGuaranteedIndicator
        self.notes = notes
        self.overdraftFeesCharges = overdraftFeesCharges
    }

    public enum CodingKeys: String, CodingKey { 
        case identification = "Identification"
        case tierValueMin = "TierValueMin"
        case tierValueMax = "TierValueMax"
        case EAR
        case agreementLengthMin = "AgreementLengthMin"
        case agreementLengthMax = "AgreementLengthMax"
        case agreementPeriod = "AgreementPeriod"
        case overdraftInterestChargingCoverage = "OverdraftInterestChargingCoverage"
        case bankGuaranteedIndicator = "BankGuaranteedIndicator"
        case notes = "Notes"
        case overdraftFeesCharges = "OverdraftFeesCharges"
    }


}

