//
// OtherFeesChargesFeeChargeCap.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Details about any caps (maximum charges) that apply to a particular fee/charge */

public struct OtherFeesChargesFeeChargeCap: Codable {

    public enum FeeType: String, Codable { 
        case serviceCAccountFee = "ServiceCAccountFee"
        case serviceCAccountFeeMonthly = "ServiceCAccountFeeMonthly"
        case serviceCOther = "ServiceCOther"
        case other = "Other"
    }
    public enum MinMaxType: String, Codable { 
        case minimum = "Minimum"
        case maximum = "Maximum"
    }
    public enum CappingPeriod: String, Codable { 
        case academicTerm = "AcademicTerm"
        case day = "Day"
        case halfYear = "Half Year"
        case month = "Month"
        case quarter = "Quarter"
        case week = "Week"
        case year = "Year"
    }
    /** Fee/charge type which is being capped */
    public var feeType: [FeeType]
    /** Indicates that this is the minimum/ maximum fee/charge that can be applied by the financial institution */
    public var minMaxType: MinMaxType
    /** fee/charges are captured dependent on the number of occurrences rather than capped at a particular amount */
    public var feeCapOccurrence: Float?
    /** Cap amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate) */
    public var feeCapAmount: String?
    /** Period e.g. day, week, month etc. for which the fee/charge is capped */
    public var cappingPeriod: CappingPeriod?
    /** Free text for adding  extra details for fee charge cap */
    public var notes: [String]?
    /** Other fee type code which is not available in the standard code set */
    public var otherFeeType: [OverdraftOtherFeeType]?

    public init(feeType: [FeeType], minMaxType: MinMaxType, feeCapOccurrence: Float?, feeCapAmount: String?, cappingPeriod: CappingPeriod?, notes: [String]?, otherFeeType: [OverdraftOtherFeeType]?) {
        self.feeType = feeType
        self.minMaxType = minMaxType
        self.feeCapOccurrence = feeCapOccurrence
        self.feeCapAmount = feeCapAmount
        self.cappingPeriod = cappingPeriod
        self.notes = notes
        self.otherFeeType = otherFeeType
    }

    public enum CodingKeys: String, CodingKey { 
        case feeType = "FeeType"
        case minMaxType = "MinMaxType"
        case feeCapOccurrence = "FeeCapOccurrence"
        case feeCapAmount = "FeeCapAmount"
        case cappingPeriod = "CappingPeriod"
        case notes = "Notes"
        case otherFeeType = "OtherFeeType"
    }


}

